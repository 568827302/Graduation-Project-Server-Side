<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context-4.1.xsd
          http://www.springframework.org/schema/mvc
          http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">
    <!-- 自动扫描包名 -->
    <context:component-scan base-package="com.heli.serverside" />
    <!-- 使用默认的注解映射 -->
    <mvc:annotation-driven />

    <!-- 使用<mvc:default-servlet-handler />标签能解决
        web.xml内DispatchedServlet的<url-pattern>为 / 时，
        静态资源（.css,.js,.jpg等）被拦截的问题 -->
    <mvc:default-servlet-handler />

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix">
            <value>/WEB-INF/pages/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
        <property name="viewClass">
            <value>org.springframework.web.servlet.view.JstlView</value>
        </property>
    </bean>
</beans>